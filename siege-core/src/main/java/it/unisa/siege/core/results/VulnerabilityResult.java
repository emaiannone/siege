package it.unisa.siege.core.results;

import it.unisa.siege.core.common.Exportable;
import it.unisa.siege.core.configuration.Vulnerability;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public class VulnerabilityResult implements Exportable<Map<String, Object>> {
    private final Vulnerability vulnerability;
    private final List<GenerationResult> generationResults;

    public VulnerabilityResult(Vulnerability vulnerability) {
        this.vulnerability = vulnerability;
        generationResults = new ArrayList<>();
    }

    public void addGenerationResult(GenerationResult generationResult) {
        generationResults.add(generationResult);
    }

    @Override
    public Map<String, Object> export() {
        Map<String, Object> map = new LinkedHashMap<>();
        map.put("cve", vulnerability.getCve());
        map.put("targetClass", vulnerability.getTargetClass());
        map.put("targetMethod", vulnerability.getTargetMethod());
        map.put("generationResults", generationResults.stream().map(GenerationResult::export).collect(Collectors.toList()));
        return map;
    }
}
